CC = gcc
CFLAGS=-g -m64 -Wall
PTHREAD_CFLAGS=-D_REENTRANT 
INCLUDES=-Iinclude -I/opt/DIS/include -I/opt/DIS/src/include -I/opt/DIS/include/dis 


#SERVER_SRCS=server.c
#CLIENT_SRCS=client.c
#SERVER_OBJS=$(SERVER_SRCS:%.c=%.o)
#CLIENT_OBJS=$(CLIENT_SRCS:%.c=%.o)
SERVER_OBJS=server.o process_video.o videoplayer.o
CLIENT_OBJS=client.o videoplayer.o


#Library stuff?
BITS=$(shell sh -c 'getconf LONG_BIT || echo NA')

ifeq ($(BITS),NA)
LIB_DIRECTORY=lib
endif

ifeq ($(BITS),32)
LIB_DIRECTORY=lib
endif

ifeq ($(BITS),64)
LIB_DIRECTORY=lib64
endif

LD=$(CC)
LFLAGS=-Wl,-L/opt/DIS/$(LIB_DIRECTORY),-rpath,/opt/DIS/$(LIB_DIRECTORY),-lsisci -lSDL2 -lavcodec -lavformat -lavutil
SERVERFLAGS= -lpthread 

#End of library stuff

all: server client

#.PHONY: all clean executables 

server: $(SERVER_OBJS)
	$(CC) $(INCLUDES) $(PTHREAD_CFLAGS) $^ -o $@ $(LFLAGS) $(SERVERFLAGS)

client: $(CLIENT_OBJS)
	$(CC) $(INCLUDES) $(PTHREAD_CFLAGS) $^ -o $@ $(LFLAGS)

%.o: %.c %.h
	$(CC) $(CFLAGS) $(INCLUDES) $(PTHREAD_CFLAGS) $(LFLAGS) -c $< -o $@

%.o: %.c
	$(CC) $(CFLAGS) $(INCLUDES) $(PTHREAD_CFLAGS)  -c $< -o $@

%: %.o
	$(LD) $^ -o $@ $(LFLAGS)

server.o: server.c videoplayer.h process_video.h
	$(CC) $(CFLAGS) $(INCLUDES) -lSDL2 -lavcodec -lavformat -lavutil -c server.c -o server.o

videoplayer.o: videoplayer.c videoplayer.h
	$(CC) $(CFLAGS) $(INCLUDES) -lSDL2 -lavutil -c videoplayer.c -o videoplayer.o

process_video.o: process_video.c process_video.h
	$(CC) $(CFLAGS) $(INCLUDES) -lavcodec -lavformat -lavutil -c process_video.c -o process_video.o


clean:
	rm -f $(SERVER_OBJS) $(CLIENT_OBJS) server client
